quarkus.http.port=8082
# tag::adocCORS[]
quarkus.http.cors=true
# end::adocCORS[]

## Database configuration
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/fights_database
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=superfight
quarkus.datasource.password=superfight
quarkus.datasource.max-size=8
quarkus.datasource.min-size=2
quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.hibernate-orm.log.sql=true

## Logging configuration
quarkus.log.console.enable=true
quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n
quarkus.log.console.level=DEBUG
quarkus.log.console.color=true

## Production configuration
%prod.quarkus.hibernate-orm.log.sql=false
%prod.quarkus.log.console.level=INFO
%prod.quarkus.hibernate-orm.database.generation=update

process.milliseconds=0

# tag::adocRestClient[]
io.quarkus.workshop.superheroes.fight.client.HeroService/mp-rest/url=http://localhost:8083
io.quarkus.workshop.superheroes.fight.client.HeroService/mp-rest/scope=javax.inject.Singleton
io.quarkus.workshop.superheroes.fight.client.VillainService/mp-rest/url=http://localhost:8084
io.quarkus.workshop.superheroes.fight.client.VillainService/mp-rest/scope=javax.inject.Singleton
# end::adocRestClient[]

# tag::adocKafka[]
## Kafka configuration
mp.messaging.outgoing.fights.connector=smallrye-kafka
mp.messaging.outgoing.fights.value.serializer=io.quarkus.kafka.client.serialization.JsonbSerializer
# end::adocKafka[]

# tag::adocBanner[]
quarkus.banner.file=banner.txt
# end::adocBanner[]

# Add OpenShift support
# tag::adocOCPJDK[]
quarkus.s2i.base-jvm-image=registry.access.redhat.com/openjdk/openjdk-11-rhel7
# end::adocOCPJDK[]
# tag::adocOCPRoute[]
quarkus.openshift.route.expose=true
# tag::adocOCPRoute[]

# tag::adocOCPConfigMap[]
quarkus.openshift.env.configmaps=fight-config

quarkus.openshift.env.mapping.QUARKUS_DATASOURCE_JDBC_URL.from-configmap=fight-config
quarkus.openshift.env.mapping.QUARKUS_DATASOURCE_JDBC_URL.with-key=database
quarkus.openshift.env.mapping.IO_QUARKUS_WORKSHOP_SUPERHEROS_FIGHT_CLIENT_HEROSERVICE_mp-rest_url.from-configmap=fight-config
quarkus.openshift.env.mapping.IO_QUARKUS_WORKSHOP_SUPERHEROS_FIGHT_CLIENT_HEROSERVICE_mp-rest_url.with-key=rest-hero
quarkus.openshift.env.mapping.IO_QUARKUS_WORKSHOP_SUPERHEROS_FIGHT_CLIENT_VILLAINSERVICE_mp-rest_url.from-configmap=fight-config
quarkus.openshift.env.mapping.IO_QUARKUS_WORKSHOP_SUPERHEROS_FIGHT_CLIENT_VILLAINSERVICE_mp-rest_url.with-key=rest-villain
quarkus.openshift.env.mapping.KAFKA_BOOTSTRAP_SERVERS.from-configmap=fight-config
quarkus.openshift.env.mapping.KAFKA_BOOTSTRAP_SERVERS.with-key=kafka
# end::adocOCPConfigMap[]

# tag::adocOCPPorts[]
quarkus.openshift.ports.http.container-port=8082
quarkus.openshift.ports.http.host-port=8080
# end::adocOCPPorts[]
