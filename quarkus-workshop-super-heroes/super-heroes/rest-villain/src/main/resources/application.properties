## HTTP configuration
quarkus.http.port=8084
# tag::adocCORS[]
quarkus.http.cors=true
# end::adocCORS[]

## Database configuration
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/villains_database
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=superbad
quarkus.datasource.password=superbad
quarkus.datasource.max-size=8
quarkus.datasource.min-size=2
# drop and create the database at startup (use `update` to only update the schema)
quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.hibernate-orm.log.sql=true

## Logging configuration
quarkus.log.console.enable=true
quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n
quarkus.log.console.level=DEBUG
quarkus.log.console.color=true

## Test configuration
%test.level.multiplier = 1

## Production configuration
%prod.quarkus.hibernate-orm.log.sql=false
%prod.quarkus.log.console.level=INFO
%prod.quarkus.hibernate-orm.database.generation=update


# tag::adocConfigProperty[]
# Business configuration
level.multiplier = 2
# end::adocConfigProperty[]

# Add OpenShift support
# tag::adocOCPJDK[]
quarkus.s2i.base-jvm-image=registry.access.redhat.com/openjdk/openjdk-11-rhel7
# end::adocOCPJDK[]
# tag::adocOCPRoute[]
quarkus.openshift.route.expose=true
# tag::adocOCPRoute[]

# tag::adocOCPConfigMap[]
quarkus.openshift.env.configmaps=villain-config

quarkus.openshift.env.mapping.QUARKUS_DATASOURCE_JDBC_URL.from-configmap=villain-config
quarkus.openshift.env.mapping.QUARKUS_DATASOURCE_JDBC_URL.with-key=database
# end::adocOCPConfigMap[]

# tag::adocOCPPorts[]
quarkus.openshift.ports.http.container-port=8084
quarkus.openshift.ports.http.host-port=8080
# end::adocOCPPorts[]
